<?xml version="1.0"?>
<source xmlns="http://xml.phpdox.net/token">
  <file xmlns="http://xml.phpdox.net/src" path="/var/www/html/queencar/app/Containers/Company/UI/WEB/Views" file="CompanyMapView.blade.php" realpath="/var/www/html/queencar/app/Containers/Company/UI/WEB/Views/CompanyMapView.blade.php" size="11663" time="2018-04-06T05:25:06+00:00" unixtime="1522992306" sha1="193b7ee0db83b9fcda919148550693a0b4f8a52b" relative="Company/UI/WEB/Views/CompanyMapView.blade.php"/>
  <line no="1">
    <token name="T_INLINE_HTML">@extends('company::CompanyLayout')</token>
  </line>
  <line no="2">
    <token name="T_INLINE_HTML">@section('content')</token>
  </line>
  <line no="3"/>
  <line no="4">
    <token name="T_INLINE_HTML">    </token>
    <token name="T_OPEN_TAG">&lt;?php</token>
  </line>
  <line no="5">
    <token name="T_WHITESPACE">    </token>
    <token name="T_VARIABLE">$path</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE">  </token>
    <token name="T_STRING">asset</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'/company/mapView'</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="6"/>
  <line no="7">
    <token name="T_WHITESPACE">    </token>
    <token name="T_COMMENT">//print_r($path);</token>
  </line>
  <line no="8"/>
  <line no="9">
    <token name="T_WHITESPACE">    </token>
    <token name="T_VARIABLE">$lat</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'App\Containers\Common\GetConfigs'</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">getConfigs</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'latitude'</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="10">
    <token name="T_WHITESPACE">    </token>
    <token name="T_VARIABLE">$longt</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'App\Containers\Common\GetConfigs'</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">getConfigs</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'longitude'</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="11">
    <token name="T_WHITESPACE">    </token>
    <token name="T_VARIABLE">$apk</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'App\Containers\Common\GetConfigs'</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">getConfigs</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'google_browser_key'</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="12">
    <token name="T_WHITESPACE">    </token>
    <token name="T_COMMENT">//echo "&lt;pre&gt;";print_r($value[0]-&gt;firstname);die();</token>
  </line>
  <line no="13">
    <token name="T_WHITESPACE">    </token>
    <token name="T_COMMENT">// print_r('AIzaSyAgkO8chMIq3JSKLXwTTRuP7ByhkL3Wzxk');echo "&lt;pre&gt;";</token>
  </line>
  <line no="14">
    <token name="T_WHITESPACE">    </token>
    <token name="T_COMMENT">//print_r($apk);echo "&lt;pre&gt;";die();</token>
  </line>
  <line no="15">
    <token name="T_WHITESPACE">    </token>
    <token name="T_CLOSE_TAG">?&gt;</token>
  </line>
  <line no="16"/>
  <line no="17">
    <token name="T_INLINE_HTML">    &lt;style&gt;</token>
  </line>
  <line no="18">
    <token name="T_INLINE_HTML">        /* Always set the map height explicitly to define the size of the div</token>
  </line>
  <line no="19">
    <token name="T_INLINE_HTML">         * element that contains the map. */</token>
  </line>
  <line no="20">
    <token name="T_INLINE_HTML">        #map {</token>
  </line>
  <line no="21">
    <token name="T_INLINE_HTML">            height: 400px;</token>
  </line>
  <line no="22">
    <token name="T_INLINE_HTML">            width:98%;</token>
  </line>
  <line no="23">
    <token name="T_INLINE_HTML">        }</token>
  </line>
  <line no="24">
    <token name="T_INLINE_HTML">        /* Optional: Makes the sample page fill the window. */</token>
  </line>
  <line no="25">
    <token name="T_INLINE_HTML">        html, body {</token>
  </line>
  <line no="26">
    <token name="T_INLINE_HTML">            height: 100%;</token>
  </line>
  <line no="27">
    <token name="T_INLINE_HTML">            margin: 0;</token>
  </line>
  <line no="28">
    <token name="T_INLINE_HTML">            padding: 0;</token>
  </line>
  <line no="29">
    <token name="T_INLINE_HTML">        }</token>
  </line>
  <line no="30">
    <token name="T_INLINE_HTML">        #legend {</token>
  </line>
  <line no="31">
    <token name="T_INLINE_HTML">            font-family: Arial, sans-serif;</token>
  </line>
  <line no="32">
    <token name="T_INLINE_HTML">            background: #fff;/*transparent;*/</token>
  </line>
  <line no="33">
    <token name="T_INLINE_HTML">            padding: 5px;</token>
  </line>
  <line no="34">
    <token name="T_INLINE_HTML">            margin: 5px;</token>
  </line>
  <line no="35">
    <token name="T_INLINE_HTML">            border: 3px solid #000;</token>
  </line>
  <line no="36">
    <token name="T_INLINE_HTML">            width:80px;</token>
  </line>
  <line no="37">
    <token name="T_INLINE_HTML">            font-size: 10px;</token>
  </line>
  <line no="38">
    <token name="T_INLINE_HTML">        }</token>
  </line>
  <line no="39">
    <token name="T_INLINE_HTML">        #legend h5 {</token>
  </line>
  <line no="40">
    <token name="T_INLINE_HTML">            margin-top: 0;</token>
  </line>
  <line no="41">
    <token name="T_INLINE_HTML">            font-size: 15px;</token>
  </line>
  <line no="42">
    <token name="T_INLINE_HTML">        }</token>
  </line>
  <line no="43">
    <token name="T_INLINE_HTML">        #legend img {</token>
  </line>
  <line no="44">
    <token name="T_INLINE_HTML">            vertical-align: middle;</token>
  </line>
  <line no="45">
    <token name="T_INLINE_HTML">            width:15px;</token>
  </line>
  <line no="46">
    <token name="T_INLINE_HTML">            height:15px;</token>
  </line>
  <line no="47">
    <token name="T_INLINE_HTML">        }</token>
  </line>
  <line no="48"/>
  <line no="49">
    <token name="T_INLINE_HTML">        .pac-controls label {</token>
  </line>
  <line no="50">
    <token name="T_INLINE_HTML">            font-family: Roboto;</token>
  </line>
  <line no="51">
    <token name="T_INLINE_HTML">            font-size: 13px;</token>
  </line>
  <line no="52">
    <token name="T_INLINE_HTML">            font-weight: 300;</token>
  </line>
  <line no="53">
    <token name="T_INLINE_HTML">        }</token>
  </line>
  <line no="54"/>
  <line no="55">
    <token name="T_INLINE_HTML">        #pac-input {</token>
  </line>
  <line no="56">
    <token name="T_INLINE_HTML">            background-color: #f7f7f7;</token>
  </line>
  <line no="57">
    <token name="T_INLINE_HTML">            font-size: 15px;</token>
  </line>
  <line no="58">
    <token name="T_INLINE_HTML">            font-weight: 300;</token>
  </line>
  <line no="59">
    <token name="T_INLINE_HTML">            margin-top: 10px;</token>
  </line>
  <line no="60">
    <token name="T_INLINE_HTML">            padding: 0 11px 0 13px;</token>
  </line>
  <line no="61">
    <token name="T_INLINE_HTML">            text-overflow: ellipsis;</token>
  </line>
  <line no="62">
    <token name="T_INLINE_HTML">            height: 25px;</token>
  </line>
  <line no="63">
    <token name="T_INLINE_HTML">            width: 40%;</token>
  </line>
  <line no="64">
    <token name="T_INLINE_HTML">            border: 1px solid #c7c7c7;</token>
  </line>
  <line no="65">
    <token name="T_INLINE_HTML">            border-bottom: none;</token>
  </line>
  <line no="66">
    <token name="T_INLINE_HTML">            border-radius: 10px;</token>
  </line>
  <line no="67">
    <token name="T_INLINE_HTML">        }</token>
  </line>
  <line no="68"/>
  <line no="69">
    <token name="T_INLINE_HTML">        #pac-input:focus {</token>
  </line>
  <line no="70">
    <token name="T_INLINE_HTML">            border-color: #4d90fe;</token>
  </line>
  <line no="71">
    <token name="T_INLINE_HTML">            margin-top:50px;</token>
  </line>
  <line no="72">
    <token name="T_INLINE_HTML">            transition: 1s ease all;</token>
  </line>
  <line no="73"/>
  <line no="74">
    <token name="T_INLINE_HTML">        }</token>
  </line>
  <line no="75"/>
  <line no="76"/>
  <line no="77"/>
  <line no="78"/>
  <line no="79">
    <token name="T_INLINE_HTML">        ::-webkit-input-placeholder { /* WebKit, Blink, Edge */</token>
  </line>
  <line no="80">
    <token name="T_INLINE_HTML">            color:    #909;</token>
  </line>
  <line no="81">
    <token name="T_INLINE_HTML">        }</token>
  </line>
  <line no="82">
    <token name="T_INLINE_HTML">        :-moz-placeholder { /* Mozilla Firefox 4 to 18 */</token>
  </line>
  <line no="83">
    <token name="T_INLINE_HTML">            color:    #909;</token>
  </line>
  <line no="84">
    <token name="T_INLINE_HTML">            opacity:  1;</token>
  </line>
  <line no="85">
    <token name="T_INLINE_HTML">        }</token>
  </line>
  <line no="86">
    <token name="T_INLINE_HTML">        ::-moz-placeholder { /* Mozilla Firefox 19+ */</token>
  </line>
  <line no="87">
    <token name="T_INLINE_HTML">            color:    #909;</token>
  </line>
  <line no="88">
    <token name="T_INLINE_HTML">            opacity:  1;</token>
  </line>
  <line no="89">
    <token name="T_INLINE_HTML">        }</token>
  </line>
  <line no="90">
    <token name="T_INLINE_HTML">        :-ms-input-placeholder { /* Internet Explorer 10-11 */</token>
  </line>
  <line no="91">
    <token name="T_INLINE_HTML">            color:    #909;</token>
  </line>
  <line no="92">
    <token name="T_INLINE_HTML">        }</token>
  </line>
  <line no="93">
    <token name="T_INLINE_HTML">        :-ms-input-placeholder { /* Microsoft Edge */</token>
  </line>
  <line no="94">
    <token name="T_INLINE_HTML">            color:    #909;</token>
  </line>
  <line no="95">
    <token name="T_INLINE_HTML">        }</token>
  </line>
  <line no="96">
    <token name="T_INLINE_HTML">    &lt;/style&gt;</token>
  </line>
  <line no="97"/>
  <line no="98">
    <token name="T_INLINE_HTML">    &lt;section id="content"&gt;</token>
  </line>
  <line no="99">
    <token name="T_INLINE_HTML">        &lt;!--start container--&gt;</token>
  </line>
  <line no="100">
    <token name="T_INLINE_HTML">        &lt;div class="container"&gt;</token>
  </line>
  <line no="101">
    <token name="T_INLINE_HTML">            &lt;!--card stats start--&gt;</token>
  </line>
  <line no="102"/>
  <line no="103">
    <token name="T_INLINE_HTML">            &lt;div class="row"&gt;</token>
  </line>
  <line no="104"/>
  <line no="105">
    <token name="T_INLINE_HTML">                &lt;div class="col s12 m12 l12"&gt;</token>
  </line>
  <line no="106"/>
  <line no="107">
    <token name="T_INLINE_HTML">                    &lt;div id="bordered-table"&gt;</token>
  </line>
  <line no="108">
    <token name="T_INLINE_HTML">                        &lt;!--&lt;h4 class="header"&gt;title&lt;/h4&gt;&lt;br&gt;--&gt;</token>
  </line>
  <line no="109">
    <token name="T_INLINE_HTML">                        &lt;div class="col s12 m12 l12"&gt;</token>
  </line>
  <line no="110"/>
  <line no="111">
    <token name="T_INLINE_HTML">                            &lt;h4 class="header"&gt;{{ $title}}&lt;/h4&gt;</token>
  </line>
  <line no="112"/>
  <line no="113"/>
  <line no="114"/>
  <line no="115">
    <token name="T_INLINE_HTML">                            &lt;div id="map"&gt;&lt;/div&gt;</token>
  </line>
  <line no="116">
    <token name="T_INLINE_HTML">                            &lt;div class="input-field col s6"&gt;</token>
  </line>
  <line no="117">
    <token name="T_INLINE_HTML">                                &lt;input id="pac-input" class=" controls" type="text" placeholder="{{trans('localization::lang_view.search_box')}}" /&gt;</token>
  </line>
  <line no="118">
    <token name="T_INLINE_HTML">                            &lt;/div&gt;</token>
  </line>
  <line no="119">
    <token name="T_INLINE_HTML">                            &lt;div id="legend"&gt;&lt;h5&gt;{{trans('localization::lang_view.legend')}}&lt;/h5&gt;&lt;/div&gt;</token>
  </line>
  <line no="120"/>
  <line no="121">
    <token name="T_INLINE_HTML">                        &lt;/div&gt;</token>
  </line>
  <line no="122"/>
  <line no="123">
    <token name="T_INLINE_HTML">                    &lt;/div&gt;</token>
  </line>
  <line no="124"/>
  <line no="125">
    <token name="T_INLINE_HTML">                &lt;/div&gt;</token>
  </line>
  <line no="126"/>
  <line no="127">
    <token name="T_INLINE_HTML">            &lt;/div&gt;</token>
  </line>
  <line no="128"/>
  <line no="129"/>
  <line no="130">
    <token name="T_INLINE_HTML">        &lt;/div&gt;</token>
  </line>
  <line no="131"/>
  <line no="132">
    <token name="T_INLINE_HTML">    &lt;/section&gt;</token>
  </line>
  <line no="133"/>
  <line no="134">
    <token name="T_INLINE_HTML">    &lt;script src="http://maps.google.com/maps/api/js?key=AIzaSyAgkO8chMIq3JSKLXwTTRuP7ByhkL3Wzxk&amp;sensor=false&amp;libraries=places"&gt;&lt;/script&gt;</token>
  </line>
  <line no="135"/>
  <line no="136">
    <token name="T_INLINE_HTML">    &lt;script&gt;</token>
  </line>
  <line no="137"/>
  <line no="138">
    <token name="T_INLINE_HTML">        var marker;</token>
  </line>
  <line no="139">
    <token name="T_INLINE_HTML">        var markers = [];</token>
  </line>
  <line no="140"/>
  <line no="141">
    <token name="T_INLINE_HTML">        var image="";</token>
  </line>
  <line no="142">
    <token name="T_INLINE_HTML">        var contentString="";</token>
  </line>
  <line no="143"/>
  <line no="144">
    <token name="T_INLINE_HTML">        var driverIcon = '{{asset('assets/icon/driver_available.png')}}';</token>
  </line>
  <line no="145">
    <token name="T_INLINE_HTML">        var driverOnTrip = '{{asset('assets/icon/driver_on_trip.png')}}';</token>
  </line>
  <line no="146">
    <token name="T_INLINE_HTML">        var ajaxPath = '{{asset('company/map/ajax')}}';</token>
  </line>
  <line no="147"/>
  <line no="148">
    <token name="T_INLINE_HTML">        var driverNotInTrip = {};</token>
  </line>
  <line no="149"/>
  <line no="150">
    <token name="T_INLINE_HTML">        //console.log(driverNotInTrip);</token>
  </line>
  <line no="151"/>
  <line no="152">
    <token name="T_INLINE_HTML">        var offTripIcon = {</token>
  </line>
  <line no="153">
    <token name="T_INLINE_HTML">            url: driverIcon</token>
  </line>
  <line no="154">
    <token name="T_INLINE_HTML">            /* size: new google.maps.Size(71, 71),</token>
  </line>
  <line no="155">
    <token name="T_INLINE_HTML">             origin: new google.maps.Point(0, 0),</token>
  </line>
  <line no="156">
    <token name="T_INLINE_HTML">             anchor: new google.maps.Point(17, 34),</token>
  </line>
  <line no="157">
    <token name="T_INLINE_HTML">             scaledSize: new google.maps.Size(25, 25)*/</token>
  </line>
  <line no="158">
    <token name="T_INLINE_HTML">        };</token>
  </line>
  <line no="159"/>
  <line no="160">
    <token name="T_INLINE_HTML">        var onTripIcon = {</token>
  </line>
  <line no="161">
    <token name="T_INLINE_HTML">            url: driverOnTrip</token>
  </line>
  <line no="162">
    <token name="T_INLINE_HTML">            /* size: new google.maps.Size(71, 71),</token>
  </line>
  <line no="163">
    <token name="T_INLINE_HTML">             origin: new google.maps.Point(0, 0),</token>
  </line>
  <line no="164">
    <token name="T_INLINE_HTML">             anchor: new google.maps.Point(17, 34),</token>
  </line>
  <line no="165">
    <token name="T_INLINE_HTML">             scaledSize: new google.maps.Size(25, 25)*/</token>
  </line>
  <line no="166">
    <token name="T_INLINE_HTML">        };</token>
  </line>
  <line no="167"/>
  <line no="168">
    <token name="T_INLINE_HTML">        function initialize() {</token>
  </line>
  <line no="169"/>
  <line no="170">
    <token name="T_INLINE_HTML">            var map = new google.maps.Map(document.getElementById('map'),</token>
  </line>
  <line no="171">
    <token name="T_INLINE_HTML">                    {</token>
  </line>
  <line no="172">
    <token name="T_INLINE_HTML">                        zoom: 2,</token>
  </line>
  <line no="173">
    <token name="T_INLINE_HTML">                        center: new google.maps.LatLng({{$lat}},{{$longt}}),</token>
  </line>
  <line no="174">
    <token name="T_INLINE_HTML">                        mapTypeId: google.maps.MapTypeId.ROADMAP</token>
  </line>
  <line no="175">
    <token name="T_INLINE_HTML">                    });</token>
  </line>
  <line no="176"/>
  <line no="177">
    <token name="T_INLINE_HTML">            var input = document.getElementById('pac-input');</token>
  </line>
  <line no="178">
    <token name="T_INLINE_HTML">            var searchBox = new google.maps.places.SearchBox(input);</token>
  </line>
  <line no="179"/>
  <line no="180">
    <token name="T_INLINE_HTML">            var legend = document.getElementById('legend');</token>
  </line>
  <line no="181">
    <token name="T_INLINE_HTML">            var name_one = "{{trans('localization::lang_view.available')}}";</token>
  </line>
  <line no="182">
    <token name="T_INLINE_HTML">            var name_two = "{{trans('localization::lang_view.on_a_trip')}}";</token>
  </line>
  <line no="183">
    <token name="T_INLINE_HTML">            var icon_one = driverIcon;</token>
  </line>
  <line no="184">
    <token name="T_INLINE_HTML">            var icon_two = driverOnTrip;</token>
  </line>
  <line no="185">
    <token name="T_INLINE_HTML">            var div = document.createElement('div');</token>
  </line>
  <line no="186">
    <token name="T_INLINE_HTML">            var div_two = document.createElement('div');</token>
  </line>
  <line no="187">
    <token name="T_INLINE_HTML">            div.innerHTML = '&lt;img src="' + icon_one + '"&gt; ' + name_one;</token>
  </line>
  <line no="188">
    <token name="T_INLINE_HTML">            legend.appendChild(div);</token>
  </line>
  <line no="189">
    <token name="T_INLINE_HTML">            div_two.innerHTML = '&lt;img src="' + icon_two + '"&gt; ' + name_two;</token>
  </line>
  <line no="190">
    <token name="T_INLINE_HTML">            legend.appendChild(div_two);</token>
  </line>
  <line no="191"/>
  <line no="192">
    <token name="T_INLINE_HTML">            map.controls[google.maps.ControlPosition.TOP_CENTER].push(input);</token>
  </line>
  <line no="193"/>
  <line no="194">
    <token name="T_INLINE_HTML">            map.controls[google.maps.ControlPosition.RIGHT_TOP].push(legend);</token>
  </line>
  <line no="195"/>
  <line no="196">
    <token name="T_INLINE_HTML">            map.addListener('bounds_changed', function() {</token>
  </line>
  <line no="197">
    <token name="T_INLINE_HTML">                searchBox.setBounds(map.getBounds());</token>
  </line>
  <line no="198">
    <token name="T_INLINE_HTML">            });</token>
  </line>
  <line no="199"/>
  <line no="200">
    <token name="T_INLINE_HTML">            searchBox.addListener('places_changed', function() {</token>
  </line>
  <line no="201">
    <token name="T_INLINE_HTML">                var places = searchBox.getPlaces();</token>
  </line>
  <line no="202"/>
  <line no="203">
    <token name="T_INLINE_HTML">                if (places.length == 0) {</token>
  </line>
  <line no="204">
    <token name="T_INLINE_HTML">                    return;</token>
  </line>
  <line no="205">
    <token name="T_INLINE_HTML">                }</token>
  </line>
  <line no="206"/>
  <line no="207">
    <token name="T_INLINE_HTML">                var bounds = new google.maps.LatLngBounds();</token>
  </line>
  <line no="208"/>
  <line no="209">
    <token name="T_INLINE_HTML">                places.forEach(function (place) {</token>
  </line>
  <line no="210">
    <token name="T_INLINE_HTML">                    if (!place.geometry) {</token>
  </line>
  <line no="211">
    <token name="T_INLINE_HTML">                        console.log("Returned place contains no geometry");</token>
  </line>
  <line no="212">
    <token name="T_INLINE_HTML">                        return;</token>
  </line>
  <line no="213">
    <token name="T_INLINE_HTML">                    }</token>
  </line>
  <line no="214"/>
  <line no="215">
    <token name="T_INLINE_HTML">                    if (place.geometry.viewport) {</token>
  </line>
  <line no="216">
    <token name="T_INLINE_HTML">                        // Only geocodes have viewport.</token>
  </line>
  <line no="217">
    <token name="T_INLINE_HTML">                        bounds.union(place.geometry.viewport);</token>
  </line>
  <line no="218">
    <token name="T_INLINE_HTML">                    } else {</token>
  </line>
  <line no="219">
    <token name="T_INLINE_HTML">                        bounds.extend(place.geometry.location);</token>
  </line>
  <line no="220">
    <token name="T_INLINE_HTML">                    }</token>
  </line>
  <line no="221"/>
  <line no="222">
    <token name="T_INLINE_HTML">                });</token>
  </line>
  <line no="223">
    <token name="T_INLINE_HTML">                map.fitBounds(bounds);</token>
  </line>
  <line no="224">
    <token name="T_INLINE_HTML">            });</token>
  </line>
  <line no="225"/>
  <line no="226">
    <token name="T_INLINE_HTML">            function intervals() {</token>
  </line>
  <line no="227"/>
  <line no="228">
    <token name="T_INLINE_HTML">                $.ajax({</token>
  </line>
  <line no="229">
    <token name="T_INLINE_HTML">                    method: 'Get',</token>
  </line>
  <line no="230">
    <token name="T_INLINE_HTML">                    url: ajaxPath,</token>
  </line>
  <line no="231"/>
  <line no="232">
    <token name="T_INLINE_HTML">                    success: function (response) {</token>
  </line>
  <line no="233">
    <token name="T_INLINE_HTML">                        //console.log(response);</token>
  </line>
  <line no="234">
    <token name="T_INLINE_HTML">                        driverNotInTrip = response;</token>
  </line>
  <line no="235">
    <token name="T_INLINE_HTML">                        var infowindows = [];</token>
  </line>
  <line no="236"/>
  <line no="237">
    <token name="T_INLINE_HTML">                        for (var item in driverNotInTrip)</token>
  </line>
  <line no="238">
    <token name="T_INLINE_HTML">                        {</token>
  </line>
  <line no="239">
    <token name="T_INLINE_HTML">                            if(driverNotInTrip[item].is_available == 1){</token>
  </line>
  <line no="240">
    <token name="T_INLINE_HTML">                                image = offTripIcon;</token>
  </line>
  <line no="241">
    <token name="T_INLINE_HTML">                            }else{</token>
  </line>
  <line no="242">
    <token name="T_INLINE_HTML">                                image = onTripIcon;</token>
  </line>
  <line no="243">
    <token name="T_INLINE_HTML">                            }</token>
  </line>
  <line no="244">
    <token name="T_INLINE_HTML">                            var contentString = '&lt;p&gt;</token>
    <token name="T_OPEN_TAG">&lt;?php </token>
    <token name="T_ECHO">echo</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">trans</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'localization::lang_view.name'</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_DOT">.</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">" : "</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
    <token name="T_CLOSE_TAG">?&gt;</token>
    <token name="T_INLINE_HTML">'+driverNotInTrip[item].name+'&lt;/p&gt;'+</token>
  </line>
  <line no="245">
    <token name="T_INLINE_HTML">                                    '&lt;p&gt;</token>
    <token name="T_OPEN_TAG">&lt;?php </token>
    <token name="T_ECHO">echo</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">trans</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'localization::lang_view.phone_number'</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_DOT">.</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">" : "</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
    <token name="T_CLOSE_TAG">?&gt;</token>
    <token name="T_INLINE_HTML">'+driverNotInTrip[item].phone+'&lt;/p&gt;'+</token>
  </line>
  <line no="246">
    <token name="T_INLINE_HTML">                                    '&lt;p&gt;</token>
    <token name="T_OPEN_TAG">&lt;?php </token>
    <token name="T_ECHO">echo</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">trans</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'localization::lang_view.type'</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_DOT">.</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">" : "</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
    <token name="T_CLOSE_TAG">?&gt;</token>
    <token name="T_INLINE_HTML">'+driverNotInTrip[item].type+'&lt;/p&gt;';</token>
  </line>
  <line no="247"/>
  <line no="248">
    <token name="T_INLINE_HTML">                            /* markers.push(new google.maps.Marker(</token>
  </line>
  <line no="249">
    <token name="T_INLINE_HTML">                             {//   map: map,</token>
  </line>
  <line no="250">
    <token name="T_INLINE_HTML">                             icon: image,</token>
  </line>
  <line no="251">
    <token name="T_INLINE_HTML">                             title: driverNotInTrip[item].name,</token>
  </line>
  <line no="252">
    <token name="T_INLINE_HTML">                             position: new google.maps.LatLng(driverNotInTrip[item].latitude,driverNotInTrip[item].longitude)//place.geometry.location</token>
  </line>
  <line no="253">
    <token name="T_INLINE_HTML">                             }));</token>
  </line>
  <line no="254">
    <token name="T_INLINE_HTML">                             infowindows.push(new google.maps.InfoWindow({</token>
  </line>
  <line no="255">
    <token name="T_INLINE_HTML">                             content: contentString</token>
  </line>
  <line no="256">
    <token name="T_INLINE_HTML">                             }));*/</token>
  </line>
  <line no="257"/>
  <line no="258">
    <token name="T_INLINE_HTML">                            marker = new google.maps.Marker(</token>
  </line>
  <line no="259">
    <token name="T_INLINE_HTML">                                    {//   map: map,</token>
  </line>
  <line no="260">
    <token name="T_INLINE_HTML">                                        icon: image,</token>
  </line>
  <line no="261">
    <token name="T_INLINE_HTML">                                        title: driverNotInTrip[item].name,</token>
  </line>
  <line no="262">
    <token name="T_INLINE_HTML">                                        position: new google.maps.LatLng(driverNotInTrip[item].latitude,driverNotInTrip[item].longitude)//place.geometry.location</token>
  </line>
  <line no="263">
    <token name="T_INLINE_HTML">                                    });</token>
  </line>
  <line no="264"/>
  <line no="265">
    <token name="T_INLINE_HTML">                            markers.push(marker);</token>
  </line>
  <line no="266"/>
  <line no="267">
    <token name="T_INLINE_HTML">                            marker.setMap(map);</token>
  </line>
  <line no="268"/>
  <line no="269">
    <token name="T_INLINE_HTML">                            var infowindow = new google.maps.InfoWindow({</token>
  </line>
  <line no="270">
    <token name="T_INLINE_HTML">                                /*pixelOffset: new google.maps.Size(-20,0)*/</token>
  </line>
  <line no="271">
    <token name="T_INLINE_HTML">                            });</token>
  </line>
  <line no="272"/>
  <line no="273">
    <token name="T_INLINE_HTML">                            google.maps.event.addListener(marker,'click', (function(marker,contentString,infowindow) {</token>
  </line>
  <line no="274">
    <token name="T_INLINE_HTML">                                return function() {</token>
  </line>
  <line no="275">
    <token name="T_INLINE_HTML">                                    infowindow.setContent(contentString);</token>
  </line>
  <line no="276">
    <token name="T_INLINE_HTML">                                    infowindow.open(map,marker);</token>
  </line>
  <line no="277"/>
  <line no="278">
    <token name="T_INLINE_HTML">                                };</token>
  </line>
  <line no="279">
    <token name="T_INLINE_HTML">                            })(marker,contentString,infowindow));</token>
  </line>
  <line no="280"/>
  <line no="281">
    <token name="T_INLINE_HTML">                        }</token>
  </line>
  <line no="282"/>
  <line no="283"/>
  <line no="284">
    <token name="T_INLINE_HTML">                       // console.log(infowindows); console.log(markers);</token>
  </line>
  <line no="285"/>
  <line no="286"/>
  <line no="287">
    <token name="T_INLINE_HTML">                        /*   for (var marker in markers)</token>
  </line>
  <line no="288">
    <token name="T_INLINE_HTML">                         {</token>
  </line>
  <line no="289">
    <token name="T_INLINE_HTML">                         console.log("hai|"+markers[marker]);</token>
  </line>
  <line no="290">
    <token name="T_INLINE_HTML">                         markers[marker].setMap(map);</token>
  </line>
  <line no="291"/>
  <line no="292">
    <token name="T_INLINE_HTML">                         /!*markers[marker].addListener('click', function(e) {</token>
  </line>
  <line no="293"/>
  <line no="294">
    <token name="T_INLINE_HTML">                         for(var i=0;i&lt;infowindows.length;i++){</token>
  </line>
  <line no="295">
    <token name="T_INLINE_HTML">                         console.log(infowindows);</token>
  </line>
  <line no="296">
    <token name="T_INLINE_HTML">                         infowindows[i].open(map, markers[marker]);</token>
  </line>
  <line no="297"/>
  <line no="298">
    <token name="T_INLINE_HTML">                         }</token>
  </line>
  <line no="299">
    <token name="T_INLINE_HTML">                         });*!/</token>
  </line>
  <line no="300"/>
  <line no="301">
    <token name="T_INLINE_HTML">                         }*/</token>
  </line>
  <line no="302"/>
  <line no="303">
    <token name="T_INLINE_HTML">                        /* for(var i=0;i&lt;markers.length;i++){</token>
  </line>
  <line no="304"/>
  <line no="305">
    <token name="T_INLINE_HTML">                         markers[i].addListener('click', function(e) {</token>
  </line>
  <line no="306"/>
  <line no="307">
    <token name="T_INLINE_HTML">                         console.log(infowindows);</token>
  </line>
  <line no="308"/>
  <line no="309">
    <token name="T_INLINE_HTML">                         infowindows[i-1].open(map,markers[i]);</token>
  </line>
  <line no="310"/>
  <line no="311">
    <token name="T_INLINE_HTML">                         });</token>
  </line>
  <line no="312"/>
  <line no="313">
    <token name="T_INLINE_HTML">                         }</token>
  </line>
  <line no="314">
    <token name="T_INLINE_HTML">                         */</token>
  </line>
  <line no="315"/>
  <line no="316">
    <token name="T_INLINE_HTML">                        setTimeout(function () {</token>
  </line>
  <line no="317">
    <token name="T_INLINE_HTML">                            deleteAllMarkers();</token>
  </line>
  <line no="318">
    <token name="T_INLINE_HTML">                            intervals();</token>
  </line>
  <line no="319">
    <token name="T_INLINE_HTML">                        }, 10000);</token>
  </line>
  <line no="320"/>
  <line no="321">
    <token name="T_INLINE_HTML">                    },</token>
  </line>
  <line no="322">
    <token name="T_INLINE_HTML">                    error: function (jqXHR, textStatus, errorThrown) {</token>
  </line>
  <line no="323">
    <token name="T_INLINE_HTML">                        //alert('error'); // What to do if we fail</token>
  </line>
  <line no="324">
    <token name="T_INLINE_HTML">                        //console.log(JSON.stringify(jqXHR));</token>
  </line>
  <line no="325">
    <token name="T_INLINE_HTML">                        console.log("AJAX error: " + textStatus + ' : ' + errorThrown);</token>
  </line>
  <line no="326">
    <token name="T_INLINE_HTML">                    }</token>
  </line>
  <line no="327">
    <token name="T_INLINE_HTML">                });</token>
  </line>
  <line no="328"/>
  <line no="329"/>
  <line no="330">
    <token name="T_INLINE_HTML">            }</token>
  </line>
  <line no="331"/>
  <line no="332">
    <token name="T_INLINE_HTML">            intervals();</token>
  </line>
  <line no="333">
    <token name="T_INLINE_HTML">        }</token>
  </line>
  <line no="334">
    <token name="T_INLINE_HTML">        google.maps.event.addDomListener(window, 'load', initialize);</token>
  </line>
  <line no="335"/>
  <line no="336">
    <token name="T_INLINE_HTML">        function deleteAllMarkers() {</token>
  </line>
  <line no="337"/>
  <line no="338">
    <token name="T_INLINE_HTML">            for(var i=0;i&lt;markers.length;i++){</token>
  </line>
  <line no="339">
    <token name="T_INLINE_HTML">                markers[i].setMap(null);</token>
  </line>
  <line no="340">
    <token name="T_INLINE_HTML">            }</token>
  </line>
  <line no="341"/>
  <line no="342">
    <token name="T_INLINE_HTML">            /* for (var item in markers){</token>
  </line>
  <line no="343">
    <token name="T_INLINE_HTML">             markers[item].setMap(null);</token>
  </line>
  <line no="344">
    <token name="T_INLINE_HTML">             }</token>
  </line>
  <line no="345">
    <token name="T_INLINE_HTML">             markers = [];</token>
  </line>
  <line no="346">
    <token name="T_INLINE_HTML">             console.log(markers);*/</token>
  </line>
  <line no="347">
    <token name="T_INLINE_HTML">        }</token>
  </line>
  <line no="348"/>
  <line no="349">
    <token name="T_INLINE_HTML">    &lt;/script&gt;</token>
  </line>
  <line no="350"/>
  <line no="351">
    <token name="T_INLINE_HTML">@endsection</token>
  </line>
  <line no="352"/>
  <line no="353"/>
  <line no="354"/>
</source>
